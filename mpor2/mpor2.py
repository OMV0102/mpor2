
from cvxopt.modeling import op
from cvxopt.modeling import variable
from scipy.optimize import linprog
#######################################################
# Решение задачи по стоимости перевозки (Критерий 1)
#######################################################
x1 = variable(20, 'x1')
c1 = [160,300,170,100,160,
    300,270,260,90,230,
    130,40,220,30,100,
    30, 100,50,40,240]

z1 = (c1[0]*x1[0] + c1[1]*x1[1] +c1[2]* x1[2] +c1[3]*x1[3] + c1[4]*x1[4] + 
    c1[5]* x1[5] + c1[6]*x1[6] +c1[7]*x1[7] +c1[8]*x1[8] + c1[9]*x1[9] +
    c1[10]*x1[10] + c1[11]*x1[11] + c1[12]*x1[12] + c1[13]*x1[13] + c1[14]*x1[14] + 
    c1[15]*x1[15] + c1[16]*x1[16] + c1[17]*x1[17] + c1[18]*x1[18] + c1[19]*x1[19])

limit11 = (x1[0] + x1[1] +x1[2] + x1[3] + x1[4] <= 4)
limit12 = (x1[5] + x1[6] +x1[7] +x1[8] +x1[9] <= 6)
limit13 = (x1[10] + x1[11] + x1[12] + x1[13] + x1[14] <= 10)
limit14 = (x1[15] + x1[16] + x1[17] + x1[18] + x1[19] <= 10)

limit15 = (x1[0] + x1[5] + x1[10] + x1[15] == 7)
limit16 = (x1[1] +x1[6] + x1[11] + x1[16] == 7)
limit17 = (x1[2] + x1[7] + x1[12] + x1[17] == 7)
limit18 = (x1[3] + x1[8] + x1[13] + x1[18] == 7)
limit19 = (x1[4] + x1[9] + x1[14] + x1[19] == 2)

x_positive1 = (x1 >= 0)
problem1 = op(z1,[limit11, limit12, limit13, limit14, limit15, limit16, limit17, limit18, limit19, x_positive1])
problem1.solve(solver = 'glpk')
problem1.status
print("Результат:")
print(x1.value)
print("Стоимость доставки:")
s1 = problem1.objective.value()[0]
print(s1, "\n")


#######################################################
# Решение задачи по времени перевозки (Критерий 2)
#######################################################

x2 = variable(20, 'x2')
c2 = [3,5,1,8,2,
    4,5,3,7,2,
    4,9,3,6,4,
    1,2,1,5,7]

z2 = (c2[0]*x2[0] + c2[1]*x2[1] +c2[2]* x2[2] +c2[3]*x2[3] + c2[4]*x2[4] + 
    c2[5]* x2[5] + c2[6]*x2[6] +c2[7]*x2[7] +c2[8]*x2[8] + c2[9]*x2[9] +
    c2[10]*x2[10] + c2[11]*x2[11] + c2[12]*x2[12] + c2[13]*x2[13] + c2[14]*x2[14] + 
    c2[15]*x2[15] + c2[16]*x2[16] + c2[17]*x2[17] + c2[18]*x2[18] + c2[19]*x2[19])

limit21 = (x2[0] + x2[1] +x2[2] + x2[3] + x2[4] <= 4)
limit22 = (x2[5] + x2[6] +x2[7] +x2[8] +x2[9] <= 6)
limit23 = (x2[10] + x2[11] + x2[12] + x2[13] + x2[14] <= 10)
limit24 = (x2[15] + x2[16] + x2[17] + x2[18] + x2[19] <= 10)

limit25 = (x2[0] + x2[5] + x2[10] + x2[15] == 7)
limit26 = (x2[1] +x2[6] + x2[11] + x2[16] == 7)
limit27 = (x2[2] + x2[7] + x2[12] + x2[17] == 7)
limit28 = (x2[3] + x2[8] + x2[13] + x2[18] == 7)
limit29 = (x2[4] + x2[9] + x2[14] + x2[19] == 2)

x_positive2 = (x2 >= 0)
problem2 = op(z2,[limit21, limit22, limit23, limit24, limit25, limit26, limit27, limit28, limit29, x_positive2])
problem2.solve(solver = 'glpk')
problem2.status
print("Результат:")
print(x2.value)
print("Время доставки:")
s2 = problem2.objective.value()[0]
print(s2, '\n')

#######################################################
# Решение задачи по стоимости и времени (оба критерия)
#######################################################

w = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
w_ = w[4]

#x3 = variable(20, 'x3')
z = 0.0
print('z :')
for i in range(0,20):
    z = (w_*(s1-x1.value[i])/s1) + ((1.0-w_)*(s2-x1.value[i])/s2)
    print(z)






